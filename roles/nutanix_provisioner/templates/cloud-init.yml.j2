#cloud-config
# vim: syntax=yaml
#

runcmd:
  - nmcli con mod "System eth0" ipv4.method manual ipv4.addresses "172.16.1.100/24 172.16.1.1" ipv4.dns 172.16.1.51
  

# Module Configuration
#cloud_config_modules:
#  - resolv_conf

# Hostname Configuration
hostname: {{ vm.vm_name }}.{{ vm_net_domain }}

# Group/User Configuration
groups:
  - cloud-users

users:
  - default
  - name: ansible
    groups: [ wheel ]
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    lock_passwd: false
    ssh-authorized-keys: 
    - {{ ansible_ssh_public_key }}

# YUM Configuration
# yum_repos:
#   

#sshd Configuration
ssh_pwauth: False



# resolv.conf configuration
#
# This is an example file to automatically configure resolv.conf when the
# instance boots for the first time.
#
# Ensure that your yaml is valid and pass this as user-data when starting
# the instance. Also be sure that your cloud.cfg file includes this
# configuration module in the appropriate section.
#

###
# Fix for NetworkManager clobbering resolv.conf created by resolv_conf module.
# See: https://bugs.launchpad.net/cloud-init/+bug/1693251
# Fixed in cloud-init v17.1
###
#write_files:
#  - content: |
#      # Created by cloud-init on instance boot automatically, do not edit.
#      #
#      [main]
#      dns=none
#    owner: root:root
#    permissions: '0644'
#    path: /etc/NetworkManager/conf.d/99-cloud-init.conf

### End Fix

#manage_resolv_conf: true

#resolv_conf:
#  nameservers:
#    - '172.16.1.101'
#  searchdomains:
#    - {{ vm_net_domain }}
#  domain: {{ vm_net_domain }}
#  options:
#    rotate: true
#    timeout: 1

power_state:
  delay: now
  mode: reboot
  condition: True
